-- Comments are ignored. Copy and paste into EcelcticIQ Live Query.
-- Overview: SQL query to extract nested json data from win_event_log_data table which houses Windows security event details
-- Outcome: Collect Windows security events from win_event_log_data table
-- Options: All potential fields from security events are extracted in this live query, remove as required
-- Options: Use sub-query limit = X when testing to maintain efficiency
-- Options: Adjust top level query filter as required, for specific eventid use eventid = 1234
-- Options: In sub-query change [source = "Security"] to [source = "System"] to search for system events rather than security events - note that this will cause any mismatched field extractions to fail 
-- Attribution: Jordan Durham @EclecticIQ
select * from (
    SELECT
    data, eventid,
    json_extract(data,'$.EventData.Eventdate') as eventdate,
    json_extract(data,'$.EventData.Source') as source,
    json_extract(data,'$.EventData.Keywords') as keywords,
    json_extract(data,'$.EventData.EventType') as eventType,
    json_extract(data,'$.EventData.Channel') as channel,
    json_extract(data,'$.EventData.Category') as category,
    json_extract(data,'$.EventData.EventID') as eventID,
    json_extract(data,'$.EventData.EventId') as eventId,
    json_extract(data,'$.EventData.UserName') as username,
    json_extract(data,'$.EventData.SecId') as secId,
    json_extract(data,'$.EventData.Account') as account,
    json_extract(data,'$.EventData.Domain') as domain,
    json_extract(data,'$.EventData.MachineIp') as machineIp,
    json_extract(data,'$.EventData.SubjectSecId') as subjectSecId,
    json_extract(data,'$.EventData.SubjectUserName') as subjectUsername,
    json_extract(data,'$.EventData.SubjectDomainName') as subjectDomain,
    json_extract(data,'$.EventData.SubjectLogonId') as subjectLogonId,
    json_extract(data,'$.EventData.LogonProcessName') as logonProcessName,
    json_extract(data,'$.EventData.TargetSecId') as targetSecId,
    json_extract(data,'$.EventData.TargetUserName') as targetUsername,
    json_extract(data,'$.EventData.TargetDomain') as targetDomain,
    json_extract(data,'$.EventData.MemberSecId') as memberSecId,
    json_extract(data,'$.EventData.MemberName') as memberName,
    json_extract(data,'$.EventData.GroupSecurityId') as groupSecurityId,
    json_extract(data,'$.EventData.GroupName') as groupName,
    json_extract(data,'$.EventData.GroupDomain') as groupDomain,
    json_extract(data,'$.EventData.Srceventdate') as srceventdate,
    json_extract(data,'$.EventData.LogonType') as LogonType,
    json_extract(data,'$.EventData.SamAccount') as samAccount,
    json_extract(data,'$.EventData.ObjName') as objName,
    json_extract(data,'$.EventData.ObjValueName') as objValueName,
    json_extract(data,'$.EventData.AccessMask') as accessMask,
    json_extract(data,'$.EventData.AttributeLDAPDisplayName') as attributeLDAPDisplayName,
    json_extract(data,'$.EventData.AttributeValue') as attributeValue,
    json_extract(data,'$.EventData.AuditPolicyChanges') as auditPolicyChanges,
    json_extract(data,'$.EventData.AuthenticationPackageName') as authenticationPackageName,
    json_extract(data,'$.EventData.Company') as company,
    json_extract(data,'$.EventData.ComputerName') as computerName,
    json_extract(data,'$.EventData.ContextInfo') as contextInfo,
    json_extract(data,'$.EventData.CurrentDirectory') as currentDirectory,
    json_extract(data,'$.EventData.Description') as description,
    json_extract(data,'$.EventData.Device') as device,
    json_extract(data,'$.EventData.DeviceClassName') as deviceClassName,
    json_extract(data,'$.EventData.DstPort') as dstPort,
    json_extract(data,'$.EventData.EngineVersion') as engineVersion,
    json_extract(data,'$.EventData.FileVersion') as fileVersion,
    json_extract(data,'$.EventData.HostVersion') as hostVersion,
    json_extract(data,'$.EventData.ImpHash') as impHash,
    json_extract(data,'$.EventData.Initiated') as initiated,
    json_extract(data,'$.EventData.ObjType') as objType,
    json_extract(data,'$.EventData.ProcName') as procName,
    json_extract(data,'$.EventData.ProcId') as procId,
    json_extract(data,'$.EventData.Service') as service,
    json_extract(data,'$.EventData.ServiceFileName') as serviceFileName,
    json_extract(data,'$.EventData.ServiceAccount') as serviceAccount,
    json_extract(data,'$.EventData.Machine') as machine,
    json_extract(data,'$.EventData.Workstation') as workstation,
    json_extract(data,'$.EventData.SrcHost') as srcHost,
    json_extract(data,'$.EventData.Message') as message,
    json_extract(data,'$.EventData.ExtMessage') as extMessage,
    json_extract(data,'$.EventData.SrcIp') as srcIp,
    json_extract(data,'$.EventData.DstIp') as dstIp,
    json_extract(data,'$.EventData.Status') as status,
    json_extract(data,'$.EventData.SourceName') as sourceName,
    json_extract(data,'$.EventData.Accesses') as accesses,
    json_extract(data,'$.EventData.RecoveryReason') as recoveryReason,
    json_extract(data,'$.EventData.ObjServer') as objServer,
    json_extract(data,'$.EventData.ObjHandle') as objHandle,
    json_extract(data,'$.EventData.ObjResourceAtt') as objResourceAtt,
    json_extract(data,'$.EventData.TokenElevType') as tokenElevType,
    json_extract(data,'$.EventData.MandatoryLabel') as mandatoryLabel,
    json_extract(data,'$.EventData.CallerProcId') as callerProcId,
    json_extract(data,'$.EventData.CallerProcName') as callerProcName,
    json_extract(data,'$.EventData.NewProcId') as newProcId,
    json_extract(data,'$.EventData.NewProcName') as newProcName,
    json_extract(data,'$.EventData.ParentProcessName') as parentProcessName,
    json_extract(data,'$.EventData.ProcCmdLine') as procCmdLine,
    json_extract(data,'$.EventData.RawMessage') as rawMessage,
    json_extract(data,'$.EventData.Hostchain') as hostchain,
    json_extract(data,'$.EventData.Tag') as tag,
    json_extract(data,'$.EventData.Raw') as raw,
    json_extract(data,'$.EventData.IntegrityLevel') as integrityLevel,
    json_extract(data,'$.EventData.LayerRTID') as layerRTID,
    json_extract(data,'$.EventData.NewValue') as newValue,
    json_extract(data,'$.EventData.Payload') as payload,
    json_extract(data,'$.EventData.PipeName') as pipeName,
    json_extract(data,'$.EventData.PowerShellScriptBlockId') as powerShellScriptBlockId,
    json_extract(data,'$.EventData.PrivilegeList') as privilegeList,
    json_extract(data,'$.EventData.Properties') as properties,
    json_extract(data,'$.EventData.QueryName') as queryName,
    json_extract(data,'$.EventData.QueryResults') as queryResults,
    json_extract(data,'$.EventData.QueryStatus') as queryStatus,
    json_extract(data,'$.EventData.RelativeTargetName') as relativeTargetName,
    json_extract(data,'$.EventData.ShareName') as shareName,
    json_extract(data,'$.EventData.Signature') as signature,
    json_extract(data,'$.EventData.StartFunction') as startFunction,
    json_extract(data,'$.EventData.StartModule') as startModule,
    json_extract(data,'$.EventData.TargetSecId') as targetSecId,
    json_extract(data,'$.EventData.TargetUserName') as targetUsername,
    json_extract(data,'$.EventData.TargetLogonId') as targetLogonId,
    json_extract(data,'$.EventData.TargetObject') as targetObject,
    json_extract(data,'$.EventData.TicketEncryptionType') as ticketEncryptionType,
    json_extract(data,'$.EventData.TicketOptions') as ticketOptions
    FROM win_event_log_data WHERE source = "Security" limit 10
)
where eventid is not null
